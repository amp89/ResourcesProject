package data;

import java.util.List;

import entities.User;

public interface ResourcesDAO {

	//TODO: test method
	public List<User> getAllUsers();
	
	//Add user / sign up
		//set account to type 1
		//send confirmation email
			//if account type is > 1 (contributor or higher), force confirmation before allowing
			//a sign in

	
	//confirm account
		//check key to generated key
		//populate sign up (?)
	
	//Get users
		//all
		//by user parameters
	

	//user self stuff
		//change password
		//change email
			//most of this stuff could probably just call the sign up methods
				//set account back to type 1
				//change generated key
				//confirm account
		//submit resource
		//delete own account
			//cascade
		
	c
	//get resources
		
		//TODO: build a dynamic search
		//by search terms
		//by topic
		//by category
		//review y/n
	
	//save resources
		
		//get parameters
		//persist new save
	
	//delete saved resources
		//search then remove from list
	
	//view saved resources
		
		//like get resources page, except with own shit
	
	//dev
		//add categories (shouldn't be able to select and add)
		//at topics ""
		
		//posts
			//modify OWN posts
			//TODO this should be on the normal search
			//ADMIN: change review status
			//ADMIN: modify all posts
			//ADMIN: delete
			//ADMIN: lock post //TODO TODO TODO TODO TODO TODO  add locked/finalized/something status to database
		//add categoreis / topics
		//ADMIN: users
			//search and modify non admin users
				//delete - call other delete method - cascade delete logic
		//modify categories
			//change dependent resources to this first
		//modify topics
			//change dependent topics to this first
		//delete categories
			//change everythign with that cat / topic to a null topic sort of thing
		//delete topics
			//change everythign with that cat / topic to a null topic sort of thing
		//OWNER:search and  modify admin users
	
	
}
