package data;

import entities.CodeResource;
import entities.User;

public interface ResourcesDAO {

	//TODO: test method
	
	public ResultObject signUpUser(User user);
	//Add user / sign up
		//set account to type 1
		//send confirmation email

	public ResultObject signInUser(User user);
	//email or password
		//if account type is > 1 (contributor or higher), force confirmation before allowing
		//a sign in
	
	public ResultObject sendConfirmation();
	
	public ResultObject confirmAccount();
	//confirm account
		//check key to generated key
		//populate sign up (?)
	
	public ResultObject getAllUsers();
	//Get users
		//all
		//by user parameters
	public ResultObject getUsers(User user);

	//user self stuff
	public ResultObject updateUser(User user);
		//statements to change shit
		//if change email
			//most of this stuff could probably just call the sign up methods
				//change generated key
				//confirm account
	//delete own account
	public ResultObject removeUser(User user);
	//cascade
	
	//submit resource
	public ResultObject submitResource(User user, CodeResource codeResource);
	
	public ResultObject getResources(CodeResource codeResource);
	//get resources
		
		//TODO: resuse this logic for user to search own saved stuff
		//TODO: build a dynamic search
		//by search terms
		//by topic
		//by category
		//review y/n
	
	public ResultObject saveResource(User user, CodeResource codeResource);
	//save resources
		
		//get parameters
		//persist new save
	
	public ResultObject deleteSavedResource(CodeResource codeResource);
	//delete saved resources
		//search then remove from list
	
	//view saved resources
	public ResultObject getSavedResources(User user);
		//could populate dropdowns with specific stuff
		//like get resources page, except with own shit
	
	//dev
		//add categories (shouldn't be able to select and add)
		//at topics ""
		
		//posts
			//modify OWN posts
			//TODO this should be on the normal search
			//ADMIN: change review status
			//ADMIN: modify all posts
			//ADMIN: delete
			//ADMIN: lock post //TODO TODO TODO TODO TODO TODO  add locked/finalized/something status to database
		//add categoreis / topics
		//ADMIN: users
			//search and modify non admin users
				//delete - call other delete method - cascade delete logic
		//modify categories
			//change dependent resources to this first
		//modify topics
			//change dependent topics to this first
		//delete categories
			//change everythign with that cat / topic to a null topic sort of thing
		//delete topics
			//change everythign with that cat / topic to a null topic sort of thing
		//OWNER:search and  modify admin users
	
	
}
